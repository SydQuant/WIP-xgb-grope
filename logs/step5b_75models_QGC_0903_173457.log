2025-09-03 17:34:58,545 - __main__ - INFO - \U0001f4c4 Loaded configuration from configs/individual_target_test.yaml
2025-09-03 17:34:58,545 - __main__ - INFO - \U0001f4c4 Using configuration: configs/individual_target_test.yaml
2025-09-03 17:34:58,545 - __main__ - INFO - \U0001f680 Starting XGB Ensemble Analysis
2025-09-03 17:34:58,545 - __main__ - INFO - \U0001f3af Target symbols: ['QGC#C']
2025-09-03 17:34:58,545 - __main__ - INFO - 
================================================================================
2025-09-03 17:34:58,545 - __main__ - INFO - \U0001f504 PROCESSING TARGET 1/1: QGC#C
2025-09-03 17:34:58,546 - __main__ - INFO - ================================================================================
2025-09-03 17:34:58,546 - __main__ - INFO - \U0001f504 Loading real market data for target: QGC#C
2025-09-03 17:34:58,546 - data.data_utils_simple - INFO - Preparing data for QGC#C, period 2020-07-01 to 2024-08-01
2025-09-03 17:34:58,674 - data.data_utils_simple - INFO - Loaded data for 10 symbols
C:\Users\zhang\Desktop\Steve\bond_ls_xgb_grope_full_v6\data\data_utils_simple.py:279: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df[target_col] = target_returns.reindex(df.index)
2025-09-03 17:34:59,406 - data.data_utils_simple - INFO - Cleaning data: (1057, 523)
2025-09-03 17:34:59,596 - data.data_utils_simple - INFO - Cleaned data: (1057, 523) (dropped 0 features)
2025-09-03 17:34:59,599 - data.data_utils_simple - INFO - Final dataset: (1057, 523), target mean=0.000129, target std=0.008221
2025-09-03 17:34:59,607 - __main__ - INFO - \u2705 Loaded data: X shape (1057, 522), y shape (1057,)
2025-09-03 17:34:59,607 - __main__ - INFO - \U0001f4c5 Date range: 2020-07-01 12:00:00 to 2024-07-31 12:00:00
2025-09-03 17:34:59,607 - __main__ - INFO - Loaded real data: X shape (1057, 522), y shape (1057,)
2025-09-03 17:34:59,607 - __main__ - INFO - Date range: 2020-07-01 12:00:00 to 2024-07-31 12:00:00
2025-09-03 17:34:59,607 - __main__ - INFO - Using CLI specified feature count: 50
2025-09-03 17:34:59,607 - __main__ - INFO - Applying smart block-wise feature selection: 522 -> 50 features
2025-09-03 17:34:59,607 - model.feature_selection - INFO - Smart block-wise selection: 522 -> blocks of 100 -> local clustering -> global deduplication
2025-09-03 17:34:59,607 - model.feature_selection - INFO - Processing block 1/6: 100 features
2025-09-03 17:35:00,069 - model.feature_selection - INFO - Block 100: Selected 15 features (best: 0.0805)
2025-09-03 17:35:00,069 - model.feature_selection - INFO - Processing block 2/6: 100 features
2025-09-03 17:35:00,541 - model.feature_selection - INFO - Block 100: Selected 15 features (best: 0.0631)
2025-09-03 17:35:00,542 - model.feature_selection - INFO - Processing block 3/6: 100 features
2025-09-03 17:35:01,010 - model.feature_selection - INFO - Block 100: Selected 15 features (best: 0.0567)
2025-09-03 17:35:01,010 - model.feature_selection - INFO - Processing block 4/6: 100 features
2025-09-03 17:35:01,498 - model.feature_selection - INFO - Block 100: Selected 15 features (best: 0.0604)
2025-09-03 17:35:01,498 - model.feature_selection - INFO - Processing block 5/6: 100 features
2025-09-03 17:35:01,985 - model.feature_selection - INFO - Block 100: Selected 15 features (best: 0.1059)
2025-09-03 17:35:01,985 - model.feature_selection - INFO - Processing block 6/6: 22 features
2025-09-03 17:35:02,095 - model.feature_selection - INFO - Block 22: Selected 8 features (best: 0.0578)
2025-09-03 17:35:02,096 - model.feature_selection - INFO - Global deduplication: 83 candidates -> removing cross-block correlations
2025-09-03 17:35:02,253 - model.feature_selection - INFO - \u2705 Smart block-wise selection complete: 50 features selected
2025-09-03 17:35:02,253 - model.feature_selection - INFO -    Local clustering: 0.7, Global clustering: 0.7
2025-09-03 17:35:02,254 - __main__ - INFO - Feature selection complete: (1057, 50)
2025-09-03 17:35:02,255 - __main__ - INFO - Using 6-fold walk-forward cross-validation
2025-09-03 17:35:02,255 - __main__ - INFO - Using standard XGBoost architecture with 75 models
2025-09-03 17:35:02,511 - __main__ - INFO - [Fold 0] Training data: X_tr(252, 50), y_tr(252,)
2025-09-03 17:35:02,511 - __main__ - INFO - [Fold 0] Target stats: mean=-0.000175, std=0.009137
2025-09-03 17:35:02,513 - __main__ - INFO - [Fold 0] Feature stats: 398.795849 total magnitude
C:\Users\zhang\anaconda3\Lib\site-packages\xgboost\core.py:729: UserWarning: [17:35:03] WARNING: C:\actions-runner\_work\xgboost\xgboost\src\common\error_msg.cc:58: Falling back to prediction using DMatrix due to mismatched devices. This might lead to higher memory usage and slower performance. XGBoost is running on: cuda:0, while the input data is on: cpu.
Potential solutions:
- Use a data structure that matches the device ordinal in the booster.
- Set the device for booster before call to inplace_predict.

This warning will only be shown once.

  return func(**kwargs)
2025-09-03 17:36:34,241 - __main__ - INFO - Fold 0 XGBoost predictions: train_preds count=75, test_preds count=75
2025-09-03 17:36:34,241 - __main__ - INFO - Fold 0 test prediction stats: model_0: mean=-0.000496, std=0.008993, range=[-0.037546, 0.019630]; model_1: mean=-0.000492, std=0.009422, range=[-0.039003, 0.020135]; model_2: mean=-0.000456, std=0.008429, range=[-0.034725, 0.018218]
2025-09-03 17:36:35,763 - __main__ - INFO - Fold 0: Selected 12 models, weights: ['0.995', '0.000', '0.003', '0.000', '0.000', '0.000', '0.000', '0.000', '0.000', '0.000', '0.002', '0.000'], tau: 0.200
2025-09-03 17:36:35,763 - __main__ - INFO - Fold 0 individual test signals: count=12, lengths=[176, 176, 176], magnitudes=[83.29226277924732, 83.13615013629514, 83.73642655309119]
2025-09-03 17:36:35,764 - __main__ - INFO - Fold 0 signal stats: mean=-0.030003, std=0.573723, sum=-5.280565, magnitude=83.292094
2025-09-03 17:36:35,765 - __main__ - INFO - [Fold 1] Training data: X_tr(252, 50), y_tr(252,)
2025-09-03 17:36:35,765 - __main__ - INFO - [Fold 1] Target stats: mean=-0.000175, std=0.009137
2025-09-03 17:36:35,766 - __main__ - INFO - [Fold 1] Feature stats: 398.795849 total magnitude
2025-09-03 17:38:16,474 - __main__ - INFO - Fold 1 XGBoost predictions: train_preds count=75, test_preds count=75
2025-09-03 17:38:16,475 - __main__ - INFO - Fold 1 test prediction stats: model_0: mean=0.000373, std=0.005937, range=[-0.037029, 0.016674]; model_1: mean=0.000370, std=0.006471, range=[-0.040354, 0.018207]; model_2: mean=0.000315, std=0.005532, range=[-0.036832, 0.015885]
2025-09-03 17:38:17,899 - __main__ - INFO - Fold 1: Selected 12 models, weights: ['0.000', '0.001', '0.477', '0.001', '0.000', '0.003', '0.007', '0.001', '0.048', '0.088', '0.373', '0.001'], tau: 0.425
2025-09-03 17:38:17,899 - __main__ - INFO - Fold 1 individual test signals: count=12, lengths=[176, 176, 176], magnitudes=[77.94380565168659, 83.84957662662323, 80.17444643255897]
2025-09-03 17:38:17,900 - __main__ - INFO - Fold 1 signal stats: mean=-0.034409, std=0.503729, sum=-6.056014, magnitude=73.322782
2025-09-03 17:38:17,901 - __main__ - INFO - [Fold 2] Training data: X_tr(352, 50), y_tr(352,)
2025-09-03 17:38:17,901 - __main__ - INFO - [Fold 2] Target stats: mean=-0.000060, std=0.008526
2025-09-03 17:38:17,901 - __main__ - INFO - [Fold 2] Feature stats: 399.958234 total magnitude
2025-09-03 17:40:01,325 - __main__ - INFO - Fold 2 XGBoost predictions: train_preds count=75, test_preds count=75
2025-09-03 17:40:01,326 - __main__ - INFO - Fold 2 test prediction stats: model_0: mean=-0.000632, std=0.004259, range=[-0.012894, 0.011255]; model_1: mean=-0.000052, std=0.004847, range=[-0.020182, 0.009963]; model_2: mean=-0.000932, std=0.004131, range=[-0.015746, 0.012233]
2025-09-03 17:40:02,984 - __main__ - INFO - Fold 2: Selected 12 models, weights: ['0.292', '0.000', '0.000', '0.196', '0.027', '0.007', '0.000', '0.000', '0.234', '0.232', '0.000', '0.011'], tau: 0.254
2025-09-03 17:40:02,984 - __main__ - INFO - Fold 2 individual test signals: count=12, lengths=[176, 176, 176], magnitudes=[94.85970791938618, 99.4253137424856, 90.02224154761544]
2025-09-03 17:40:02,986 - __main__ - INFO - Fold 2 signal stats: mean=0.011084, std=0.501952, sum=1.950766, magnitude=74.224827
2025-09-03 17:40:02,987 - __main__ - INFO - [Fold 3] Training data: X_tr(528, 50), y_tr(528,)
2025-09-03 17:40:02,987 - __main__ - INFO - [Fold 3] Target stats: mean=-0.000234, std=0.008442
2025-09-03 17:40:02,988 - __main__ - INFO - [Fold 3] Feature stats: 398.008953 total magnitude
2025-09-03 17:41:53,302 - __main__ - INFO - Fold 3 XGBoost predictions: train_preds count=75, test_preds count=75
2025-09-03 17:41:53,302 - __main__ - INFO - Fold 3 test prediction stats: model_0: mean=0.000059, std=0.003528, range=[-0.007061, 0.010040]; model_1: mean=0.000371, std=0.004570, range=[-0.010441, 0.013278]; model_2: mean=-0.000342, std=0.003687, range=[-0.013377, 0.008477]
2025-09-03 17:41:54,905 - __main__ - INFO - Fold 3: Selected 12 models, weights: ['0.000', '0.054', '0.114', '0.362', '0.000', '0.140', '0.000', '0.000', '0.000', '0.291', '0.001', '0.036'], tau: 0.200
2025-09-03 17:41:54,905 - __main__ - INFO - Fold 3 individual test signals: count=12, lengths=[176, 176, 176], magnitudes=[88.90278548311036, 96.84198535360636, 98.09210413855845]
2025-09-03 17:41:54,906 - __main__ - INFO - Fold 3 signal stats: mean=0.036688, std=0.499878, sum=6.457037, magnitude=73.601414
2025-09-03 17:41:54,907 - __main__ - INFO - [Fold 4] Training data: X_tr(704, 50), y_tr(704,)
2025-09-03 17:41:54,907 - __main__ - INFO - [Fold 4] Target stats: mean=-0.000065, std=0.008386
2025-09-03 17:41:54,908 - __main__ - INFO - [Fold 4] Feature stats: 397.110897 total magnitude
2025-09-03 17:43:51,039 - __main__ - INFO - Fold 4 XGBoost predictions: train_preds count=75, test_preds count=75
2025-09-03 17:43:51,039 - __main__ - INFO - Fold 4 test prediction stats: model_0: mean=0.000720, std=0.004463, range=[-0.010636, 0.014777]; model_1: mean=0.000196, std=0.005116, range=[-0.019307, 0.015922]; model_2: mean=0.000860, std=0.004250, range=[-0.013392, 0.012048]
2025-09-03 17:43:52,759 - __main__ - INFO - Fold 4: Selected 12 models, weights: ['0.790', '0.007', '0.000', '0.002', '0.000', '0.000', '0.000', '0.000', '0.004', '0.196', '0.000', '0.000'], tau: 0.257
2025-09-03 17:43:52,760 - __main__ - INFO - Fold 4 individual test signals: count=12, lengths=[176, 176, 176], magnitudes=[89.07623592532292, 92.96826781981491, 93.34244484612015]
2025-09-03 17:43:52,760 - __main__ - INFO - Fold 4 signal stats: mean=0.010781, std=0.527298, sum=1.897444, magnitude=78.516673
2025-09-03 17:43:52,761 - __main__ - INFO - [Fold 5] Training data: X_tr(880, 50), y_tr(880,)
2025-09-03 17:43:52,761 - __main__ - INFO - [Fold 5] Target stats: mean=-0.000067, std=0.008095
2025-09-03 17:43:52,763 - __main__ - INFO - [Fold 5] Feature stats: 396.817984 total magnitude
2025-09-03 17:45:37,030 - __main__ - INFO - Fold 5 XGBoost predictions: train_preds count=75, test_preds count=75
2025-09-03 17:45:37,031 - __main__ - INFO - Fold 5 test prediction stats: model_0: mean=-0.000085, std=0.003991, range=[-0.015084, 0.010348]; model_1: mean=0.000116, std=0.003916, range=[-0.010962, 0.009306]; model_2: mean=0.000334, std=0.004156, range=[-0.011934, 0.011121]
2025-09-03 17:45:38,947 - __main__ - INFO - Fold 5: Selected 12 models, weights: ['0.179', '0.039', '0.034', '0.034', '0.162', '0.127', '0.154', '0.051', '0.065', '0.088', '0.034', '0.034'], tau: 2.321
2025-09-03 17:45:38,947 - __main__ - INFO - Fold 5 individual test signals: count=12, lengths=[177, 177, 177], magnitudes=[97.067765611509, 96.0231464336668, 90.09107919354149]
2025-09-03 17:45:38,948 - __main__ - INFO - Fold 5 signal stats: mean=0.045363, std=0.438254, sum=8.029226, magnitude=63.686074
2025-09-03 17:45:38,948 - __main__ - INFO - \U0001f4cb Processing complete: 6 fold summaries created
2025-09-03 17:45:38,948 - __main__ - INFO - \U0001f4ca OOS signal magnitude: 446.6438635931
2025-09-03 17:45:38,948 - __main__ - INFO - OOS DAPY(hits): 47.92 | OOS IR: -0.06 | OOS hit-rate: 0.595
2025-09-03 17:45:38,970 - __main__ - INFO - Calculating comprehensive performance metrics...
2025-09-03 17:45:38,972 - metrics.performance_report - INFO - Performance summary saved to artifacts/performance_summary.csv
2025-09-03 17:45:38,977 - diagnostics.diagnostic_output - INFO - \U0001f4be Saved comprehensive diagnostics to artifacts/diagnostics/diagnostic_QGCC_20250903_174538.json
2025-09-03 17:45:38,978 - diagnostics.diagnostic_output - INFO - \U0001f4c4 Saved diagnostic summary to artifacts/diagnostics/summary_QGCC_20250903_174538.txt
2025-09-03 17:45:38,980 - __main__ - INFO - \u2705 Completed QGC#C
2025-09-03 17:45:38,980 - __main__ - INFO - 
================================================================================
2025-09-03 17:45:38,980 - __main__ - INFO - \U0001f4ca FINAL SUMMARY: 1/1 targets completed successfully
2025-09-03 17:45:38,980 - __main__ - INFO - ================================================================================
GPU acceleration enabled for XGBoost
OOS Shuffling p-value (DAPY): 0.0049751244 (obs=47.92)

==================================================
            OUT-OF-SAMPLE PERFORMANCE             
==================================================

RETURNS:
  Total Return:          -1.45%
  Annualized Return:     -0.35%
  Volatility:             6.27%
  Sharpe Ratio:           -0.06

RISK:
  Max Drawdown:         -11.73%

ACCURACY:
  Win Rate:              48.44%
  Hit Rate:              48.44%
  Avg Win:               0.0026
  Avg Loss:             -0.0027

TRADES:
  Total Trades:            1057
  Winning Trades:           512
  Losing Trades:            488
==================================================
