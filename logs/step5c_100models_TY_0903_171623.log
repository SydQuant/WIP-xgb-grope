2025-09-03 17:16:25,027 - __main__ - INFO - \U0001f4c4 Loaded configuration from configs/individual_target_test.yaml
2025-09-03 17:16:25,027 - __main__ - INFO - \U0001f4c4 Using configuration: configs/individual_target_test.yaml
2025-09-03 17:16:25,027 - __main__ - INFO - \U0001f680 Starting XGB Ensemble Analysis
2025-09-03 17:16:25,027 - __main__ - INFO - \U0001f3af Target symbols: ['@TY#C']
2025-09-03 17:16:25,027 - __main__ - INFO - 
================================================================================
2025-09-03 17:16:25,027 - __main__ - INFO - \U0001f504 PROCESSING TARGET 1/1: @TY#C
2025-09-03 17:16:25,028 - __main__ - INFO - ================================================================================
2025-09-03 17:16:25,028 - __main__ - INFO - \U0001f504 Loading real market data for target: @TY#C
2025-09-03 17:16:25,028 - data.data_utils_simple - INFO - Preparing data for @TY#C, period 2020-07-01 to 2024-08-01
2025-09-03 17:16:25,237 - data.data_utils_simple - INFO - Loaded data for 10 symbols
C:\Users\zhang\Desktop\Steve\bond_ls_xgb_grope_full_v6\data\data_utils_simple.py:279: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df[target_col] = target_returns.reindex(df.index)
2025-09-03 17:16:26,025 - data.data_utils_simple - INFO - Cleaning data: (1057, 523)
2025-09-03 17:16:26,231 - data.data_utils_simple - INFO - Cleaned data: (1057, 523) (dropped 0 features)
2025-09-03 17:16:26,235 - data.data_utils_simple - INFO - Final dataset: (1057, 523), target mean=-0.000249, target std=0.003829
2025-09-03 17:16:26,245 - __main__ - INFO - \u2705 Loaded data: X shape (1057, 522), y shape (1057,)
2025-09-03 17:16:26,245 - __main__ - INFO - \U0001f4c5 Date range: 2020-07-01 12:00:00 to 2024-07-31 12:00:00
2025-09-03 17:16:26,245 - __main__ - INFO - Loaded real data: X shape (1057, 522), y shape (1057,)
2025-09-03 17:16:26,245 - __main__ - INFO - Date range: 2020-07-01 12:00:00 to 2024-07-31 12:00:00
2025-09-03 17:16:26,245 - __main__ - INFO - Using CLI specified feature count: 50
2025-09-03 17:16:26,245 - __main__ - INFO - Applying smart block-wise feature selection: 522 -> 50 features
2025-09-03 17:16:26,245 - model.feature_selection - INFO - Smart block-wise selection: 522 -> blocks of 100 -> local clustering -> global deduplication
2025-09-03 17:16:26,245 - model.feature_selection - INFO - Processing block 1/6: 100 features
2025-09-03 17:16:27,121 - model.feature_selection - INFO - Block 100: Selected 15 features (best: 0.0751)
2025-09-03 17:16:27,121 - model.feature_selection - INFO - Processing block 2/6: 100 features
2025-09-03 17:16:27,669 - model.feature_selection - INFO - Block 100: Selected 15 features (best: 0.0696)
2025-09-03 17:16:27,669 - model.feature_selection - INFO - Processing block 3/6: 100 features
2025-09-03 17:16:28,131 - model.feature_selection - INFO - Block 100: Selected 15 features (best: 0.0697)
2025-09-03 17:16:28,131 - model.feature_selection - INFO - Processing block 4/6: 100 features
2025-09-03 17:16:28,601 - model.feature_selection - INFO - Block 100: Selected 15 features (best: 0.0702)
2025-09-03 17:16:28,601 - model.feature_selection - INFO - Processing block 5/6: 100 features
2025-09-03 17:16:29,044 - model.feature_selection - INFO - Block 100: Selected 15 features (best: 0.0732)
2025-09-03 17:16:29,044 - model.feature_selection - INFO - Processing block 6/6: 22 features
2025-09-03 17:16:29,156 - model.feature_selection - INFO - Block 22: Selected 10 features (best: 0.0578)
2025-09-03 17:16:29,156 - model.feature_selection - INFO - Global deduplication: 85 candidates -> removing cross-block correlations
2025-09-03 17:16:29,330 - model.feature_selection - INFO - \u2705 Smart block-wise selection complete: 50 features selected
2025-09-03 17:16:29,330 - model.feature_selection - INFO -    Local clustering: 0.7, Global clustering: 0.7
2025-09-03 17:16:29,331 - __main__ - INFO - Feature selection complete: (1057, 50)
2025-09-03 17:16:29,331 - __main__ - INFO - Using 6-fold walk-forward cross-validation
2025-09-03 17:16:29,331 - __main__ - INFO - Using standard XGBoost architecture with 100 models
2025-09-03 17:16:29,629 - __main__ - INFO - [Fold 0] Training data: X_tr(252, 50), y_tr(252,)
2025-09-03 17:16:29,630 - __main__ - INFO - [Fold 0] Target stats: mean=-0.000172, std=0.002027
2025-09-03 17:16:29,632 - __main__ - INFO - [Fold 0] Feature stats: 227.572313 total magnitude
C:\Users\zhang\anaconda3\Lib\site-packages\xgboost\core.py:729: UserWarning: [17:16:30] WARNING: C:\actions-runner\_work\xgboost\xgboost\src\common\error_msg.cc:58: Falling back to prediction using DMatrix due to mismatched devices. This might lead to higher memory usage and slower performance. XGBoost is running on: cuda:0, while the input data is on: cpu.
Potential solutions:
- Use a data structure that matches the device ordinal in the booster.
- Set the device for booster before call to inplace_predict.

This warning will only be shown once.

  return func(**kwargs)
2025-09-03 17:18:19,521 - __main__ - INFO - Fold 0 XGBoost predictions: train_preds count=100, test_preds count=100
2025-09-03 17:18:19,521 - __main__ - INFO - Fold 0 test prediction stats: model_0: mean=-0.000219, std=0.001346, range=[-0.004723, 0.003439]; model_1: mean=-0.000272, std=0.001806, range=[-0.007919, 0.005735]; model_2: mean=-0.000218, std=0.000872, range=[-0.003203, 0.002066]
2025-09-03 17:18:21,018 - __main__ - INFO - Fold 0: Selected 12 models, weights: ['0.046', '0.177', '0.061', '0.038', '0.062', '0.038', '0.053', '0.201', '0.087', '0.039', '0.116', '0.082'], tau: 2.346
2025-09-03 17:18:21,018 - __main__ - INFO - Fold 0 individual test signals: count=12, lengths=[176, 176, 176], magnitudes=[94.99095928133553, 95.48791666613045, 96.69362468064642]
2025-09-03 17:18:21,019 - __main__ - INFO - Fold 0 signal stats: mean=-0.075251, std=0.612394, sum=-13.244250, magnitude=93.554053
2025-09-03 17:18:21,020 - __main__ - INFO - [Fold 1] Training data: X_tr(252, 50), y_tr(252,)
2025-09-03 17:18:21,020 - __main__ - INFO - [Fold 1] Target stats: mean=-0.000172, std=0.002027
2025-09-03 17:18:21,021 - __main__ - INFO - [Fold 1] Feature stats: 227.572313 total magnitude
2025-09-03 17:20:05,431 - __main__ - INFO - Fold 1 XGBoost predictions: train_preds count=100, test_preds count=100
2025-09-03 17:20:05,432 - __main__ - INFO - Fold 1 test prediction stats: model_0: mean=-0.000067, std=0.001136, range=[-0.004686, 0.003672]; model_1: mean=-0.000003, std=0.001456, range=[-0.005468, 0.004742]; model_2: mean=-0.000117, std=0.000812, range=[-0.002903, 0.001796]
2025-09-03 17:20:06,990 - __main__ - INFO - Fold 1: Selected 12 models, weights: ['0.230', '0.000', '0.205', '0.000', '0.045', '0.012', '0.000', '0.444', '0.065', '0.000', '0.000', '0.000'], tau: 0.273
2025-09-03 17:20:06,990 - __main__ - INFO - Fold 1 individual test signals: count=12, lengths=[176, 176, 176], magnitudes=[73.44187575867889, 77.42154875184411, 81.37841953631202]
2025-09-03 17:20:06,991 - __main__ - INFO - Fold 1 signal stats: mean=0.000797, std=0.474294, sum=0.140325, magnitude=68.750464
2025-09-03 17:20:06,991 - __main__ - INFO - [Fold 2] Training data: X_tr(352, 50), y_tr(352,)
2025-09-03 17:20:06,991 - __main__ - INFO - [Fold 2] Target stats: mean=-0.000131, std=0.002098
2025-09-03 17:20:06,992 - __main__ - INFO - [Fold 2] Feature stats: 226.920644 total magnitude
2025-09-03 17:21:47,872 - __main__ - INFO - Fold 2 XGBoost predictions: train_preds count=100, test_preds count=100
2025-09-03 17:21:47,873 - __main__ - INFO - Fold 2 test prediction stats: model_0: mean=-0.000438, std=0.000980, range=[-0.003168, 0.002228]; model_1: mean=-0.000484, std=0.001395, range=[-0.003752, 0.002741]; model_2: mean=-0.000259, std=0.000806, range=[-0.002633, 0.002022]
2025-09-03 17:21:49,494 - __main__ - INFO - Fold 2: Selected 12 models, weights: ['0.145', '0.011', '0.143', '0.028', '0.282', '0.160', '0.153', '0.009', '0.036', '0.017', '0.009', '0.007'], tau: 0.960
2025-09-03 17:21:49,495 - __main__ - INFO - Fold 2 individual test signals: count=12, lengths=[176, 176, 176], magnitudes=[91.05142147210461, 91.23629681088012, 80.94865421484835]
2025-09-03 17:21:49,495 - __main__ - INFO - Fold 2 signal stats: mean=-0.059258, std=0.434169, sum=-10.429362, magnitude=62.952066
2025-09-03 17:21:49,496 - __main__ - INFO - [Fold 3] Training data: X_tr(528, 50), y_tr(528,)
2025-09-03 17:21:49,496 - __main__ - INFO - [Fold 3] Target stats: mean=-0.000327, std=0.003058
2025-09-03 17:21:49,497 - __main__ - INFO - [Fold 3] Feature stats: 223.479321 total magnitude
2025-09-03 17:23:05,253 - __main__ - INFO - Fold 3 XGBoost predictions: train_preds count=100, test_preds count=100
2025-09-03 17:23:05,253 - __main__ - INFO - Fold 3 test prediction stats: model_0: mean=-0.000554, std=0.001858, range=[-0.006111, 0.003348]; model_1: mean=-0.000792, std=0.002574, range=[-0.009669, 0.007561]; model_2: mean=-0.000789, std=0.001698, range=[-0.005894, 0.003829]
2025-09-03 17:23:07,445 - __main__ - INFO - Fold 3: Selected 12 models, weights: ['0.363', '0.003', '0.000', '0.011', '0.000', '0.000', '0.250', '0.000', '0.000', '0.372', '0.000', '0.001'], tau: 0.412
2025-09-03 17:23:07,445 - __main__ - INFO - Fold 3 individual test signals: count=12, lengths=[176, 176, 176], magnitudes=[79.21710791391392, 91.37288247875625, 88.02842555341732]
2025-09-03 17:23:07,447 - __main__ - INFO - Fold 3 signal stats: mean=0.002253, std=0.509304, sum=0.396475, magnitude=74.527530
2025-09-03 17:23:07,448 - __main__ - INFO - [Fold 4] Training data: X_tr(704, 50), y_tr(704,)
2025-09-03 17:23:07,448 - __main__ - INFO - [Fold 4] Target stats: mean=-0.000310, std=0.003725
2025-09-03 17:23:07,449 - __main__ - INFO - [Fold 4] Feature stats: 223.591866 total magnitude
2025-09-03 17:23:41,638 - __main__ - INFO - Fold 4 XGBoost predictions: train_preds count=100, test_preds count=100
2025-09-03 17:23:41,639 - __main__ - INFO - Fold 4 test prediction stats: model_0: mean=0.000135, std=0.002193, range=[-0.005909, 0.007194]; model_1: mean=-0.000341, std=0.002403, range=[-0.005841, 0.005723]; model_2: mean=-0.000213, std=0.001766, range=[-0.005164, 0.004631]
2025-09-03 17:23:43,225 - __main__ - INFO - Fold 4: Selected 12 models, weights: ['0.079', '0.081', '0.040', '0.095', '0.067', '0.111', '0.046', '0.149', '0.051', '0.038', '0.157', '0.086'], tau: 2.768
2025-09-03 17:23:43,225 - __main__ - INFO - Fold 4 individual test signals: count=12, lengths=[176, 176, 176], magnitudes=[88.11272186412015, 97.55782049774534, 86.53792816076698]
2025-09-03 17:23:43,226 - __main__ - INFO - Fold 4 signal stats: mean=-0.050303, std=0.399382, sum=-8.853409, magnitude=56.500634
2025-09-03 17:23:43,227 - __main__ - INFO - [Fold 5] Training data: X_tr(880, 50), y_tr(880,)
2025-09-03 17:23:43,227 - __main__ - INFO - [Fold 5] Target stats: mean=-0.000315, std=0.003836
2025-09-03 17:23:43,228 - __main__ - INFO - [Fold 5] Feature stats: 222.809072 total magnitude
2025-09-03 17:24:05,159 - __main__ - INFO - Fold 5 XGBoost predictions: train_preds count=100, test_preds count=100
2025-09-03 17:24:05,159 - __main__ - INFO - Fold 5 test prediction stats: model_0: mean=-0.000330, std=0.001750, range=[-0.004536, 0.005419]; model_1: mean=-0.000419, std=0.002073, range=[-0.008931, 0.006483]; model_2: mean=-0.000262, std=0.001554, range=[-0.004248, 0.004933]
2025-09-03 17:24:06,749 - __main__ - INFO - Fold 5: Selected 12 models, weights: ['0.161', '0.127', '0.081', '0.079', '0.051', '0.160', '0.068', '0.046', '0.087', '0.046', '0.048', '0.046'], tau: 3.000
2025-09-03 17:24:06,749 - __main__ - INFO - Fold 5 individual test signals: count=12, lengths=[177, 177, 177], magnitudes=[93.72936986928181, 87.64581599927885, 87.93407475667624]
2025-09-03 17:24:06,750 - __main__ - INFO - Fold 5 signal stats: mean=-0.075270, std=0.434978, sum=-13.322716, magnitude=65.423935
2025-09-03 17:24:06,750 - __main__ - INFO - \U0001f4cb Processing complete: 6 fold summaries created
2025-09-03 17:24:06,750 - __main__ - INFO - \U0001f4ca OOS signal magnitude: 421.7086809738
2025-09-03 17:24:06,751 - __main__ - INFO - OOS DAPY(hits): 44.11 | OOS IR: 0.32 | OOS hit-rate: 0.588
2025-09-03 17:24:06,768 - __main__ - INFO - Calculating comprehensive performance metrics...
2025-09-03 17:24:06,769 - metrics.performance_report - INFO - Performance summary saved to artifacts/performance_summary.csv
2025-09-03 17:24:06,774 - diagnostics.diagnostic_output - INFO - \U0001f4be Saved comprehensive diagnostics to artifacts/diagnostics/diagnostic_TYC_20250903_172406.json
2025-09-03 17:24:06,774 - diagnostics.diagnostic_output - INFO - \U0001f4c4 Saved diagnostic summary to artifacts/diagnostics/summary_TYC_20250903_172406.txt
2025-09-03 17:24:06,776 - __main__ - INFO - \u2705 Completed @TY#C
2025-09-03 17:24:06,776 - __main__ - INFO - 
================================================================================
2025-09-03 17:24:06,776 - __main__ - INFO - \U0001f4ca FINAL SUMMARY: 1/1 targets completed successfully
2025-09-03 17:24:06,776 - __main__ - INFO - ================================================================================
GPU acceleration enabled for XGBoost
OOS Shuffling p-value (DAPY): 0.0049751244 (obs=44.11)

==================================================
            OUT-OF-SAMPLE PERFORMANCE             
==================================================

RETURNS:
  Total Return:           3.94%
  Annualized Return:      0.94%
  Volatility:             2.94%
  Sharpe Ratio:            0.32

RISK:
  Max Drawdown:          -7.87%

ACCURACY:
  Win Rate:              47.40%
  Hit Rate:              47.40%
  Avg Win:               0.0012
  Avg Loss:             -0.0012

TRADES:
  Total Trades:            1057
  Winning Trades:           501
  Losing Trades:            483
==================================================
