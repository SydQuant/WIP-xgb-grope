2025-09-03 16:30:20,844 - __main__ - INFO - \U0001f4c4 Loaded configuration from configs/individual_target_test.yaml
2025-09-03 16:30:20,846 - __main__ - INFO - \U0001f4c4 Using configuration: configs/individual_target_test.yaml
2025-09-03 16:30:20,846 - __main__ - INFO - \U0001f680 Starting XGB Ensemble Analysis
2025-09-03 16:30:20,846 - __main__ - INFO - \U0001f3af Target symbols: ['@EU#C']
2025-09-03 16:30:20,846 - __main__ - INFO - 
================================================================================
2025-09-03 16:30:20,846 - __main__ - INFO - \U0001f504 PROCESSING TARGET 1/1: @EU#C
2025-09-03 16:30:20,846 - __main__ - INFO - ================================================================================
2025-09-03 16:30:20,846 - __main__ - INFO - \U0001f504 Loading real market data for target: @EU#C
2025-09-03 16:30:20,846 - data.data_utils_simple - INFO - Preparing data for @EU#C, period 2020-07-01 to 2024-08-01
2025-09-03 16:30:21,049 - data.data_utils_simple - INFO - Loaded data for 10 symbols
C:\Users\zhang\Desktop\Steve\bond_ls_xgb_grope_full_v6\data\data_utils_simple.py:279: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df[target_col] = target_returns.reindex(df.index)
2025-09-03 16:30:21,874 - data.data_utils_simple - INFO - Cleaning data: (1057, 523)
2025-09-03 16:30:22,086 - data.data_utils_simple - INFO - Cleaned data: (1057, 523) (dropped 0 features)
2025-09-03 16:30:22,089 - data.data_utils_simple - INFO - Final dataset: (1057, 523), target mean=-0.000115, target std=0.004623
2025-09-03 16:30:22,099 - __main__ - INFO - \u2705 Loaded data: X shape (1057, 522), y shape (1057,)
2025-09-03 16:30:22,100 - __main__ - INFO - \U0001f4c5 Date range: 2020-07-01 12:00:00 to 2024-07-31 12:00:00
2025-09-03 16:30:22,100 - __main__ - INFO - Loaded real data: X shape (1057, 522), y shape (1057,)
2025-09-03 16:30:22,100 - __main__ - INFO - Date range: 2020-07-01 12:00:00 to 2024-07-31 12:00:00
2025-09-03 16:30:22,100 - __main__ - INFO - Applying smart block-wise feature selection: 522 -> 50 features
2025-09-03 16:30:22,100 - model.feature_selection - INFO - Smart block-wise selection: 522 -> blocks of 100 -> local clustering -> global deduplication
2025-09-03 16:30:22,100 - model.feature_selection - INFO - Processing block 1/6: 100 features
2025-09-03 16:30:22,550 - model.feature_selection - INFO - Block 100: Selected 15 features (best: 0.1072)
2025-09-03 16:30:22,551 - model.feature_selection - INFO - Processing block 2/6: 100 features
2025-09-03 16:30:23,028 - model.feature_selection - INFO - Block 100: Selected 15 features (best: 0.0865)
2025-09-03 16:30:23,028 - model.feature_selection - INFO - Processing block 3/6: 100 features
2025-09-03 16:30:23,493 - model.feature_selection - INFO - Block 100: Selected 15 features (best: 0.1039)
2025-09-03 16:30:23,493 - model.feature_selection - INFO - Processing block 4/6: 100 features
2025-09-03 16:30:23,955 - model.feature_selection - INFO - Block 100: Selected 15 features (best: 0.1061)
2025-09-03 16:30:23,955 - model.feature_selection - INFO - Processing block 5/6: 100 features
2025-09-03 16:30:24,442 - model.feature_selection - INFO - Block 100: Selected 15 features (best: 0.0713)
2025-09-03 16:30:24,442 - model.feature_selection - INFO - Processing block 6/6: 22 features
2025-09-03 16:30:24,556 - model.feature_selection - INFO - Block 22: Selected 8 features (best: 0.0779)
2025-09-03 16:30:24,556 - model.feature_selection - INFO - Global deduplication: 83 candidates -> removing cross-block correlations
2025-09-03 16:30:24,693 - model.feature_selection - INFO - \u2705 Smart block-wise selection complete: 50 features selected
2025-09-03 16:30:24,693 - model.feature_selection - INFO -    Local clustering: 0.7, Global clustering: 0.7
2025-09-03 16:30:24,694 - __main__ - INFO - Feature selection complete: (1057, 50)
2025-09-03 16:30:24,915 - __main__ - INFO - [Fold 0] Training data: X_tr(252, 50), y_tr(252,)
2025-09-03 16:30:24,915 - __main__ - INFO - [Fold 0] Target stats: mean=0.000149, std=0.003674
2025-09-03 16:30:24,917 - __main__ - INFO - [Fold 0] Feature stats: 403.477502 total magnitude
C:\Users\zhang\anaconda3\Lib\site-packages\xgboost\core.py:729: UserWarning: [16:30:25] WARNING: C:\actions-runner\_work\xgboost\xgboost\src\common\error_msg.cc:58: Falling back to prediction using DMatrix due to mismatched devices. This might lead to higher memory usage and slower performance. XGBoost is running on: cuda:0, while the input data is on: cpu.
Potential solutions:
- Use a data structure that matches the device ordinal in the booster.
- Set the device for booster before call to inplace_predict.

This warning will only be shown once.

  return func(**kwargs)
2025-09-03 16:31:00,090 - __main__ - INFO - Fold 0 XGBoost predictions: train_preds count=50, test_preds count=50
2025-09-03 16:31:00,090 - __main__ - INFO - Fold 0 test prediction stats: model_0: mean=0.000197, std=0.003044, range=[-0.009075, 0.008004]; model_1: mean=0.000199, std=0.003424, range=[-0.010455, 0.008478]; model_2: mean=0.000193, std=0.002501, range=[-0.006912, 0.005452]
2025-09-03 16:31:01,315 - __main__ - INFO - Fold 0: Selected 12 models, weights: ['0.131', '0.243', '0.002', '0.000', '0.278', '0.001', '0.278', '0.064', '0.000', '0.000', '0.004', '0.000'], tau: 0.313
2025-09-03 16:31:01,315 - __main__ - INFO - Fold 0 individual test signals: count=12, lengths=[176, 176, 176], magnitudes=[91.23957829786035, 89.86014536849126, 92.48761983991375]
2025-09-03 16:31:01,316 - __main__ - INFO - Fold 0 signal stats: mean=-0.038235, std=0.597878, sum=-6.729426, magnitude=89.602603
2025-09-03 16:31:01,316 - __main__ - INFO - [Fold 1] Training data: X_tr(252, 50), y_tr(252,)
2025-09-03 16:31:01,317 - __main__ - INFO - [Fold 1] Target stats: mean=0.000149, std=0.003674
2025-09-03 16:31:01,318 - __main__ - INFO - [Fold 1] Feature stats: 403.477502 total magnitude
2025-09-03 16:31:35,320 - __main__ - INFO - Fold 1 XGBoost predictions: train_preds count=50, test_preds count=50
2025-09-03 16:31:35,321 - __main__ - INFO - Fold 1 test prediction stats: model_0: mean=0.000186, std=0.002356, range=[-0.011455, 0.006019]; model_1: mean=0.000173, std=0.002670, range=[-0.016076, 0.007771]; model_2: mean=0.000218, std=0.002043, range=[-0.008837, 0.004929]
2025-09-03 16:31:36,570 - __main__ - INFO - Fold 1: Selected 12 models, weights: ['0.000', '0.344', '0.053', '0.000', '0.022', '0.005', '0.004', '0.017', '0.000', '0.344', '0.000', '0.212'], tau: 0.204
2025-09-03 16:31:36,570 - __main__ - INFO - Fold 1 individual test signals: count=12, lengths=[176, 176, 176], magnitudes=[80.97629343104812, 83.69452180863229, 79.3997287036411]
2025-09-03 16:31:36,571 - __main__ - INFO - Fold 1 signal stats: mean=0.034460, std=0.484851, sum=6.064984, magnitude=70.117200
2025-09-03 16:31:36,572 - __main__ - INFO - [Fold 2] Training data: X_tr(352, 50), y_tr(352,)
2025-09-03 16:31:36,572 - __main__ - INFO - [Fold 2] Target stats: mean=0.000019, std=0.003443
2025-09-03 16:31:36,574 - __main__ - INFO - [Fold 2] Feature stats: 406.607941 total magnitude
2025-09-03 16:32:12,231 - __main__ - INFO - Fold 2 XGBoost predictions: train_preds count=50, test_preds count=50
2025-09-03 16:32:12,231 - __main__ - INFO - Fold 2 test prediction stats: model_0: mean=-0.000309, std=0.001452, range=[-0.004466, 0.003706]; model_1: mean=-0.000606, std=0.001953, range=[-0.006223, 0.005616]; model_2: mean=-0.000098, std=0.001401, range=[-0.004033, 0.003705]
2025-09-03 16:32:13,585 - __main__ - INFO - Fold 2: Selected 12 models, weights: ['0.017', '0.377', '0.000', '0.087', '0.129', '0.000', '0.000', '0.009', '0.377', '0.002', '0.000', '0.000'], tau: 0.366
2025-09-03 16:32:13,585 - __main__ - INFO - Fold 2 individual test signals: count=12, lengths=[176, 176, 176], magnitudes=[90.18819374793335, 92.99680025429441, 98.16225287862478]
2025-09-03 16:32:13,587 - __main__ - INFO - Fold 2 signal stats: mean=-0.020389, std=0.527679, sum=-3.588391, magnitude=77.649569
2025-09-03 16:32:13,588 - __main__ - INFO - [Fold 3] Training data: X_tr(528, 50), y_tr(528,)
2025-09-03 16:32:13,588 - __main__ - INFO - [Fold 3] Target stats: mean=-0.000277, std=0.004259
2025-09-03 16:32:13,589 - __main__ - INFO - [Fold 3] Feature stats: 400.382545 total magnitude
2025-09-03 16:32:53,523 - __main__ - INFO - Fold 3 XGBoost predictions: train_preds count=50, test_preds count=50
2025-09-03 16:32:53,523 - __main__ - INFO - Fold 3 test prediction stats: model_0: mean=-0.000626, std=0.002265, range=[-0.008589, 0.005622]; model_1: mean=-0.001106, std=0.002831, range=[-0.009236, 0.005994]; model_2: mean=-0.000191, std=0.002096, range=[-0.005828, 0.006461]
2025-09-03 16:32:55,005 - __main__ - INFO - Fold 3: Selected 12 models, weights: ['0.121', '0.020', '0.195', '0.020', '0.312', '0.020', '0.023', '0.032', '0.020', '0.020', '0.196', '0.020'], tau: 1.460
2025-09-03 16:32:55,005 - __main__ - INFO - Fold 3 individual test signals: count=12, lengths=[176, 176, 176], magnitudes=[91.11926241905675, 89.01728894505723, 89.66927437092033]
2025-09-03 16:32:55,006 - __main__ - INFO - Fold 3 signal stats: mean=-0.043179, std=0.490143, sum=-7.599493, magnitude=70.259681
2025-09-03 16:32:55,007 - __main__ - INFO - [Fold 4] Training data: X_tr(704, 50), y_tr(704,)
2025-09-03 16:32:55,007 - __main__ - INFO - [Fold 4] Target stats: mean=-0.000164, std=0.004850
2025-09-03 16:32:55,009 - __main__ - INFO - [Fold 4] Feature stats: 400.548576 total magnitude
2025-09-03 16:33:37,657 - __main__ - INFO - Fold 4 XGBoost predictions: train_preds count=50, test_preds count=50
2025-09-03 16:33:37,657 - __main__ - INFO - Fold 4 test prediction stats: model_0: mean=-0.000471, std=0.002478, range=[-0.006740, 0.006384]; model_1: mean=-0.000520, std=0.002507, range=[-0.007977, 0.008644]; model_2: mean=-0.000385, std=0.002380, range=[-0.006358, 0.007931]
2025-09-03 16:33:39,257 - __main__ - INFO - Fold 4: Selected 12 models, weights: ['0.060', '0.052', '0.073', '0.035', '0.169', '0.092', '0.094', '0.039', '0.116', '0.103', '0.041', '0.126'], tau: 2.410
2025-09-03 16:33:39,258 - __main__ - INFO - Fold 4 individual test signals: count=12, lengths=[176, 176, 176], magnitudes=[95.21686056517335, 94.79385309776254, 92.14426481960554]
2025-09-03 16:33:39,259 - __main__ - INFO - Fold 4 signal stats: mean=0.045505, std=0.417929, sum=8.008954, magnitude=59.819103
2025-09-03 16:33:39,259 - __main__ - INFO - [Fold 5] Training data: X_tr(880, 50), y_tr(880,)
2025-09-03 16:33:39,259 - __main__ - INFO - [Fold 5] Target stats: mean=-0.000122, std=0.004803
2025-09-03 16:33:39,260 - __main__ - INFO - [Fold 5] Feature stats: 399.040655 total magnitude
2025-09-03 16:34:23,606 - __main__ - INFO - Fold 5 XGBoost predictions: train_preds count=50, test_preds count=50
2025-09-03 16:34:23,606 - __main__ - INFO - Fold 5 test prediction stats: model_0: mean=-0.000012, std=0.002222, range=[-0.005754, 0.006434]; model_1: mean=-0.000327, std=0.002230, range=[-0.009622, 0.005470]; model_2: mean=0.000013, std=0.002032, range=[-0.005151, 0.004612]
2025-09-03 16:34:25,217 - __main__ - INFO - Fold 5: Selected 12 models, weights: ['0.081', '0.138', '0.012', '0.146', '0.028', '0.206', '0.206', '0.082', '0.012', '0.059', '0.020', '0.010'], tau: 1.321
2025-09-03 16:34:25,217 - __main__ - INFO - Fold 5 individual test signals: count=12, lengths=[177, 177, 177], magnitudes=[91.71002794685239, 91.2972920081351, 92.36093955039323]
2025-09-03 16:34:25,219 - __main__ - INFO - Fold 5 signal stats: mean=-0.012930, std=0.421354, sum=-2.288658, magnitude=60.951680
2025-09-03 16:34:25,219 - __main__ - INFO - \U0001f4cb Processing complete: 6 fold summaries created
2025-09-03 16:34:25,219 - __main__ - INFO - \U0001f4ca OOS signal magnitude: 428.3998360020
2025-09-03 16:34:25,220 - __main__ - INFO - OOS DAPY(hits): 46.01 | OOS IR: 0.35 | OOS hit-rate: 0.591
2025-09-03 16:34:25,253 - __main__ - INFO - Calculating comprehensive performance metrics...
2025-09-03 16:34:25,257 - metrics.performance_report - INFO - Performance summary saved to artifacts/performance_summary.csv
2025-09-03 16:34:25,271 - diagnostics.diagnostic_output - INFO - \U0001f4be Saved comprehensive diagnostics to artifacts/diagnostics/diagnostic_EUC_20250903_163425.json
2025-09-03 16:34:25,272 - diagnostics.diagnostic_output - INFO - \U0001f4c4 Saved diagnostic summary to artifacts/diagnostics/summary_EUC_20250903_163425.txt
2025-09-03 16:35:13,226 - __main__ - INFO - \u2705 Completed @EU#C
2025-09-03 16:35:13,227 - __main__ - INFO - 
================================================================================
2025-09-03 16:35:13,227 - __main__ - INFO - \U0001f4ca FINAL SUMMARY: 1/1 targets completed successfully
2025-09-03 16:35:13,227 - __main__ - INFO - ================================================================================
GPU acceleration enabled for XGBoost
OOS Shuffling p-value (DAPY): 0.0049751244 (obs=46.01)

==================================================
            OUT-OF-SAMPLE PERFORMANCE             
==================================================

RETURNS:
  Total Return:           5.46%
  Annualized Return:      1.30%
  Volatility:             3.68%
  Sharpe Ratio:            0.35

RISK:
  Max Drawdown:          -8.25%

ACCURACY:
  Win Rate:              47.30%
  Hit Rate:              47.30%
  Avg Win:               0.0015
  Avg Loss:             -0.0015

TRADES:
  Total Trades:            1057
  Winning Trades:           500
  Losing Trades:            487
==================================================

[Production] Training production model on all data (for deployment only, not for backtest)...
GPU acceleration enabled for XGBoost
[Production] Saved artifacts/production_model.json
