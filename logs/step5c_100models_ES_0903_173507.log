2025-09-03 17:35:10,023 - __main__ - INFO - \U0001f4c4 Loaded configuration from configs/individual_target_test.yaml
2025-09-03 17:35:10,023 - __main__ - INFO - \U0001f4c4 Using configuration: configs/individual_target_test.yaml
2025-09-03 17:35:10,023 - __main__ - INFO - \U0001f680 Starting XGB Ensemble Analysis
2025-09-03 17:35:10,024 - __main__ - INFO - \U0001f3af Target symbols: ['@ES#C']
2025-09-03 17:35:10,024 - __main__ - INFO - 
================================================================================
2025-09-03 17:35:10,024 - __main__ - INFO - \U0001f504 PROCESSING TARGET 1/1: @ES#C
2025-09-03 17:35:10,024 - __main__ - INFO - ================================================================================
2025-09-03 17:35:10,024 - __main__ - INFO - \U0001f504 Loading real market data for target: @ES#C
2025-09-03 17:35:10,024 - data.data_utils_simple - INFO - Preparing data for @ES#C, period 2020-07-01 to 2024-08-01
2025-09-03 17:35:10,231 - data.data_utils_simple - INFO - Loaded data for 10 symbols
C:\Users\zhang\Desktop\Steve\bond_ls_xgb_grope_full_v6\data\data_utils_simple.py:279: PerformanceWarning: DataFrame is highly fragmented.  This is usually the result of calling `frame.insert` many times, which has poor performance.  Consider joining all columns at once using pd.concat(axis=1) instead. To get a de-fragmented frame, use `newframe = frame.copy()`
  df[target_col] = target_returns.reindex(df.index)
2025-09-03 17:35:10,954 - data.data_utils_simple - INFO - Cleaning data: (1057, 523)
2025-09-03 17:35:11,137 - data.data_utils_simple - INFO - Cleaned data: (1057, 523) (dropped 0 features)
2025-09-03 17:35:11,140 - data.data_utils_simple - INFO - Final dataset: (1057, 523), target mean=0.000496, target std=0.009404
2025-09-03 17:35:11,148 - __main__ - INFO - \u2705 Loaded data: X shape (1057, 522), y shape (1057,)
2025-09-03 17:35:11,149 - __main__ - INFO - \U0001f4c5 Date range: 2020-07-01 12:00:00 to 2024-07-31 12:00:00
2025-09-03 17:35:11,149 - __main__ - INFO - Loaded real data: X shape (1057, 522), y shape (1057,)
2025-09-03 17:35:11,149 - __main__ - INFO - Date range: 2020-07-01 12:00:00 to 2024-07-31 12:00:00
2025-09-03 17:35:11,149 - __main__ - INFO - Using CLI specified feature count: 50
2025-09-03 17:35:11,149 - __main__ - INFO - Applying smart block-wise feature selection: 522 -> 50 features
2025-09-03 17:35:11,149 - model.feature_selection - INFO - Smart block-wise selection: 522 -> blocks of 100 -> local clustering -> global deduplication
2025-09-03 17:35:11,149 - model.feature_selection - INFO - Processing block 1/6: 100 features
2025-09-03 17:35:11,654 - model.feature_selection - INFO - Block 100: Selected 15 features (best: 0.0823)
2025-09-03 17:35:11,654 - model.feature_selection - INFO - Processing block 2/6: 100 features
2025-09-03 17:35:12,163 - model.feature_selection - INFO - Block 100: Selected 15 features (best: 0.0681)
2025-09-03 17:35:12,163 - model.feature_selection - INFO - Processing block 3/6: 100 features
2025-09-03 17:35:12,639 - model.feature_selection - INFO - Block 100: Selected 15 features (best: 0.0682)
2025-09-03 17:35:12,639 - model.feature_selection - INFO - Processing block 4/6: 100 features
2025-09-03 17:35:13,084 - model.feature_selection - INFO - Block 100: Selected 15 features (best: 0.1273)
2025-09-03 17:35:13,085 - model.feature_selection - INFO - Processing block 5/6: 100 features
2025-09-03 17:35:13,808 - model.feature_selection - INFO - Block 100: Selected 15 features (best: 0.0789)
2025-09-03 17:35:13,808 - model.feature_selection - INFO - Processing block 6/6: 22 features
2025-09-03 17:35:13,930 - model.feature_selection - INFO - Block 22: Selected 8 features (best: 0.0739)
2025-09-03 17:35:13,930 - model.feature_selection - INFO - Global deduplication: 83 candidates -> removing cross-block correlations
2025-09-03 17:35:14,103 - model.feature_selection - INFO - \u2705 Smart block-wise selection complete: 50 features selected
2025-09-03 17:35:14,103 - model.feature_selection - INFO -    Local clustering: 0.7, Global clustering: 0.7
2025-09-03 17:35:14,104 - __main__ - INFO - Feature selection complete: (1057, 50)
2025-09-03 17:35:14,104 - __main__ - INFO - Using 6-fold walk-forward cross-validation
2025-09-03 17:35:14,104 - __main__ - INFO - Using standard XGBoost architecture with 100 models
2025-09-03 17:35:14,434 - __main__ - INFO - [Fold 0] Training data: X_tr(252, 50), y_tr(252,)
2025-09-03 17:35:14,435 - __main__ - INFO - [Fold 0] Target stats: mean=0.001273, std=0.008950
2025-09-03 17:35:14,437 - __main__ - INFO - [Fold 0] Feature stats: 393.456325 total magnitude
C:\Users\zhang\anaconda3\Lib\site-packages\xgboost\core.py:729: UserWarning: [17:35:15] WARNING: C:\actions-runner\_work\xgboost\xgboost\src\common\error_msg.cc:58: Falling back to prediction using DMatrix due to mismatched devices. This might lead to higher memory usage and slower performance. XGBoost is running on: cuda:0, while the input data is on: cpu.
Potential solutions:
- Use a data structure that matches the device ordinal in the booster.
- Set the device for booster before call to inplace_predict.

This warning will only be shown once.

  return func(**kwargs)
2025-09-03 17:37:34,997 - __main__ - INFO - Fold 0 XGBoost predictions: train_preds count=100, test_preds count=100
2025-09-03 17:37:34,997 - __main__ - INFO - Fold 0 test prediction stats: model_0: mean=0.001319, std=0.009138, range=[-0.025416, 0.026818]; model_1: mean=0.001281, std=0.009686, range=[-0.029023, 0.028040]; model_2: mean=0.001389, std=0.008503, range=[-0.023015, 0.025610]
2025-09-03 17:37:36,802 - __main__ - INFO - Fold 0: Selected 12 models, weights: ['0.284', '0.000', '0.000', '0.002', '0.023', '0.000', '0.603', '0.061', '0.000', '0.000', '0.000', '0.026'], tau: 0.313
2025-09-03 17:37:36,803 - __main__ - INFO - Fold 0 individual test signals: count=12, lengths=[176, 176, 176], magnitudes=[79.1634197781669, 79.08677751757845, 79.31072303075786]
2025-09-03 17:37:36,803 - __main__ - INFO - Fold 0 signal stats: mean=-0.011384, std=0.559980, sum=-2.003628, magnitude=79.557500
2025-09-03 17:37:36,804 - __main__ - INFO - [Fold 1] Training data: X_tr(252, 50), y_tr(252,)
2025-09-03 17:37:36,804 - __main__ - INFO - [Fold 1] Target stats: mean=0.001273, std=0.008950
2025-09-03 17:37:36,805 - __main__ - INFO - [Fold 1] Feature stats: 393.456325 total magnitude
2025-09-03 17:39:53,814 - __main__ - INFO - Fold 1 XGBoost predictions: train_preds count=100, test_preds count=100
2025-09-03 17:39:53,814 - __main__ - INFO - Fold 1 test prediction stats: model_0: mean=0.001049, std=0.004738, range=[-0.020083, 0.013980]; model_1: mean=0.001530, std=0.005248, range=[-0.020652, 0.016252]; model_2: mean=0.000851, std=0.004607, range=[-0.019427, 0.012861]
2025-09-03 17:39:55,564 - __main__ - INFO - Fold 1: Selected 12 models, weights: ['0.173', '0.000', '0.000', '0.000', '0.000', '0.827', '0.000', '0.000', '0.000', '0.000', '0.000', '0.000'], tau: 0.200
2025-09-03 17:39:55,564 - __main__ - INFO - Fold 1 individual test signals: count=12, lengths=[176, 176, 176], magnitudes=[72.36618706762246, 73.06483269761165, 77.94242175389198]
2025-09-03 17:39:55,565 - __main__ - INFO - Fold 1 signal stats: mean=-0.015299, std=0.489539, sum=-2.692539, magnitude=69.956082
2025-09-03 17:39:55,566 - __main__ - INFO - [Fold 2] Training data: X_tr(352, 50), y_tr(352,)
2025-09-03 17:39:55,566 - __main__ - INFO - [Fold 2] Target stats: mean=0.001167, std=0.008346
2025-09-03 17:39:55,568 - __main__ - INFO - [Fold 2] Feature stats: 397.803423 total magnitude
2025-09-03 17:42:18,321 - __main__ - INFO - Fold 2 XGBoost predictions: train_preds count=100, test_preds count=100
2025-09-03 17:42:18,321 - __main__ - INFO - Fold 2 test prediction stats: model_0: mean=0.001230, std=0.004467, range=[-0.009709, 0.012868]; model_1: mean=0.002586, std=0.005723, range=[-0.011854, 0.017120]; model_2: mean=0.002253, std=0.004021, range=[-0.008398, 0.013245]
2025-09-03 17:42:20,081 - __main__ - INFO - Fold 2: Selected 12 models, weights: ['0.000', '0.000', '0.000', '0.331', '0.000', '0.331', '0.002', '0.000', '0.000', '0.331', '0.000', '0.004'], tau: 0.200
2025-09-03 17:42:20,082 - __main__ - INFO - Fold 2 individual test signals: count=12, lengths=[176, 176, 176], magnitudes=[94.52820222852031, 96.56755215651546, 97.42608168773346]
2025-09-03 17:42:20,083 - __main__ - INFO - Fold 2 signal stats: mean=0.046030, std=0.525604, sum=8.101315, magnitude=78.945368
2025-09-03 17:42:20,083 - __main__ - INFO - [Fold 3] Training data: X_tr(528, 50), y_tr(528,)
2025-09-03 17:42:20,083 - __main__ - INFO - [Fold 3] Target stats: mean=0.000483, std=0.010169
2025-09-03 17:42:20,085 - __main__ - INFO - [Fold 3] Feature stats: 393.339343 total magnitude
2025-09-03 17:44:54,019 - __main__ - INFO - Fold 3 XGBoost predictions: train_preds count=100, test_preds count=100
2025-09-03 17:44:54,019 - __main__ - INFO - Fold 3 test prediction stats: model_0: mean=-0.001332, std=0.005302, range=[-0.015688, 0.011968]; model_1: mean=-0.001599, std=0.005871, range=[-0.018134, 0.015541]; model_2: mean=-0.001686, std=0.005330, range=[-0.018119, 0.011469]
2025-09-03 17:44:56,046 - __main__ - INFO - Fold 3: Selected 12 models, weights: ['0.000', '0.464', '0.000', '0.000', '0.000', '0.071', '0.464', '0.000', '0.001', '0.000', '0.000', '0.000'], tau: 0.200
2025-09-03 17:44:56,046 - __main__ - INFO - Fold 3 individual test signals: count=12, lengths=[176, 176, 176], magnitudes=[87.90290628089977, 86.90086707060044, 87.59557502908933]
2025-09-03 17:44:56,047 - __main__ - INFO - Fold 3 signal stats: mean=-0.001522, std=0.498894, sum=-0.267869, magnitude=72.584666
2025-09-03 17:44:56,048 - __main__ - INFO - [Fold 4] Training data: X_tr(704, 50), y_tr(704,)
2025-09-03 17:44:56,048 - __main__ - INFO - [Fold 4] Target stats: mean=0.000319, std=0.010462
2025-09-03 17:44:56,049 - __main__ - INFO - [Fold 4] Feature stats: 392.040051 total magnitude
2025-09-03 17:46:28,741 - __main__ - INFO - Fold 4 XGBoost predictions: train_preds count=100, test_preds count=100
2025-09-03 17:46:28,741 - __main__ - INFO - Fold 4 test prediction stats: model_0: mean=-0.000824, std=0.005513, range=[-0.019346, 0.013044]; model_1: mean=0.000284, std=0.005717, range=[-0.023250, 0.012847]; model_2: mean=-0.000036, std=0.004473, range=[-0.016649, 0.013045]
2025-09-03 17:46:30,689 - __main__ - INFO - Fold 4: Selected 12 models, weights: ['0.917', '0.000', '0.000', '0.000', '0.000', '0.000', '0.000', '0.000', '0.001', '0.079', '0.002', '0.000'], tau: 0.200
2025-09-03 17:46:30,689 - __main__ - INFO - Fold 4 individual test signals: count=12, lengths=[176, 176, 176], magnitudes=[91.2256501074218, 92.07704326989905, 87.68559135235304]
2025-09-03 17:46:30,690 - __main__ - INFO - Fold 4 signal stats: mean=-0.080120, std=0.574107, sum=-14.101205, magnitude=86.988984
2025-09-03 17:46:30,691 - __main__ - INFO - [Fold 5] Training data: X_tr(880, 50), y_tr(880,)
2025-09-03 17:46:30,691 - __main__ - INFO - [Fold 5] Target stats: mean=0.000397, std=0.009850
2025-09-03 17:46:30,693 - __main__ - INFO - [Fold 5] Feature stats: 390.687900 total magnitude
2025-09-03 17:47:36,553 - __main__ - INFO - Fold 5 XGBoost predictions: train_preds count=100, test_preds count=100
2025-09-03 17:47:36,553 - __main__ - INFO - Fold 5 test prediction stats: model_0: mean=0.000297, std=0.004468, range=[-0.013278, 0.010434]; model_1: mean=0.000668, std=0.004448, range=[-0.016495, 0.013336]; model_2: mean=0.000249, std=0.004152, range=[-0.010015, 0.010987]
2025-09-03 17:47:38,870 - __main__ - INFO - Fold 5: Selected 12 models, weights: ['0.008', '0.000', '0.048', '0.212', '0.064', '0.234', '0.000', '0.000', '0.000', '0.202', '0.234', '0.000'], tau: 0.338
2025-09-03 17:47:38,870 - __main__ - INFO - Fold 5 individual test signals: count=12, lengths=[177, 177, 177], magnitudes=[95.7642812252498, 96.11423898247651, 89.63006911494733]
2025-09-03 17:47:38,871 - __main__ - INFO - Fold 5 signal stats: mean=0.028390, std=0.456383, sum=5.025037, magnitude=66.304999
2025-09-03 17:47:38,871 - __main__ - INFO - \U0001f4cb Processing complete: 6 fold summaries created
2025-09-03 17:47:38,871 - __main__ - INFO - \U0001f4ca OOS signal magnitude: 454.3375995041
2025-09-03 17:47:38,871 - __main__ - INFO - OOS DAPY(hits): 46.01 | OOS IR: 0.51 | OOS hit-rate: 0.591
2025-09-03 17:47:38,894 - __main__ - INFO - Calculating comprehensive performance metrics...
2025-09-03 17:47:38,897 - metrics.performance_report - INFO - Performance summary saved to artifacts/performance_summary.csv
2025-09-03 17:47:38,903 - diagnostics.diagnostic_output - INFO - \U0001f4be Saved comprehensive diagnostics to artifacts/diagnostics/diagnostic_ESC_20250903_174738.json
2025-09-03 17:47:38,904 - diagnostics.diagnostic_output - INFO - \U0001f4c4 Saved diagnostic summary to artifacts/diagnostics/summary_ESC_20250903_174738.txt
2025-09-03 17:47:38,906 - __main__ - INFO - \u2705 Completed @ES#C
2025-09-03 17:47:38,906 - __main__ - INFO - 
================================================================================
2025-09-03 17:47:38,906 - __main__ - INFO - \U0001f4ca FINAL SUMMARY: 1/1 targets completed successfully
2025-09-03 17:47:38,906 - __main__ - INFO - ================================================================================
GPU acceleration enabled for XGBoost
OOS Shuffling p-value (DAPY): 0.0049751244 (obs=46.01)

==================================================
            OUT-OF-SAMPLE PERFORMANCE             
==================================================

RETURNS:
  Total Return:          17.61%
  Annualized Return:      4.20%
  Volatility:             8.22%
  Sharpe Ratio:            0.51

RISK:
  Max Drawdown:         -16.54%

ACCURACY:
  Win Rate:              47.40%
  Hit Rate:              47.40%
  Avg Win:               0.0035
  Avg Loss:             -0.0032

TRADES:
  Total Trades:            1057
  Winning Trades:           501
  Losing Trades:            498
==================================================
